{"version":3,"file":"index.browser.js","sources":["../src/png.js","../src/jpeg.js","../src/cache.js","../src/resolve.js"],"sourcesContent":["import PNG from '@react-18-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n\n  width = null;\n\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = data => {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nconst getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        reject(new Error('Cannot fetch local file in this environemnt'));\n        return;\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        reject(new Error(`Cannot fetch non-local path: ${src}`));\n        return;\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n\n  return Promise.resolve();\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n"],"names":["PNG","isValid","data","e","MARKERS","JPEG","width","height","readUInt16BE","Error","marker","pos","length","includes","Buffer","isBuffer","createCache","limit","cache","keys","get","key","set","value","push","shift","reset","IMAGE_CACHE","fetchRemoteFile","_asyncToGenerator","_regeneratorRuntime","uri","options","fetch","response","buffer","arrayBuffer","constructor","name","from","isValidFormat","format","lower","toLowerCase","guessFormat","isCompatibleBase64","test","getImage","body","extension","resolveBase64Image","match","exec","Promise","resolve","resolveImageFromData","src","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","headers","method","resolveImage","cacheKey","toString","image"],"mappings":"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"}