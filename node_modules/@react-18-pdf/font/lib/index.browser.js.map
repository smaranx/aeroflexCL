{"version":3,"file":"index.browser.js","sources":["../src/font.js","../src/standard.js","../src/index.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-18-pdf/fontkit';\n\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isDataUrl = dataUrl => {\n  const header = dataUrl.split(',')[0];\n  const hasDataPrefix = header.substring(0, 5) === 'data:';\n  const hasBase64Prefix = header.split(';')[1] === 'base64';\n\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nconst resolveFontWeight = value => {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    const { postscriptName } = this.options;\n\n    if (isDataUrl(this.src)) {\n      this.data = fontkit.create(\n        Buffer.from(this.src.split(',')[1], 'base64'),\n        postscriptName,\n      );\n    } else if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data, postscriptName);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, postscriptName, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    const numericFontWeight = resolveFontWeight(fontWeight);\n\n    this.sources.push(\n      new FontSource(src, this.family, fontStyle, numericFontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources\n      .filter(s => s.fontWeight < fontWeight)\n      .sort(sortByFontWeight);\n    const gt = styleSources\n      .filter(s => s.fontWeight > fontWeight)\n      .sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${this.family}, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Courier-BoldOblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Helvetica-BoldOblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n  'Times-BoldItalic',\n];\n","import font from './font';\nimport standard from './standard';\n\nfunction FontStore() {\n  let fonts = {};\n\n  let emojiSource = null;\n\n  let hyphenationCallback = null;\n\n  this.register = data => {\n    const { family } = data;\n\n    if (!fonts[family]) {\n      fonts[family] = font.create(family);\n    }\n\n    // Bulk loading\n    if (data.fonts) {\n      for (let i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register({ family, ...data.fonts[i] });\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = ({ url, format = 'png' }) => {\n    emojiSource = { url, format };\n  };\n\n  this.registerHyphenationCallback = callback => {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\n        `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n      );\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = async descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return;\n\n    const f = this.getFont(descriptor);\n\n    // We cache the font to avoid fetching it many times\n    if (!f.data && !f.loading) {\n      await f.load();\n    }\n  };\n\n  this.reset = () => {\n    const keys = Object.keys(fonts);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = () => {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = () => fonts;\n\n  this.getEmojiSource = () => emojiSource;\n\n  this.getHyphenationCallback = () => hyphenationCallback;\n\n  this.getRegisteredFontFamilies = () => Object.keys(fonts);\n}\n\nexport default FontStore;\n"],"names":["FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","fetchFont","_asyncToGenerator","_regeneratorRuntime","src","options","fetch","response","buffer","arrayBuffer","constructor","name","Buffer","from","isDataUrl","dataUrl","header","split","hasDataPrefix","substring","hasBase64Prefix","resolveFontWeight","value","sortByFontWeight","a","b","fontWeight","FontSource","fontFamily","fontStyle","data","loading","load","postscriptName","fontkit","create","headers","body","method","Promise","resolve","reject","open","err","Font","family","sources","register","_objectWithoutPropertiesLoose","numericFontWeight","push","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","length","lt","sort","gt","Error","FontStore","fonts","emojiSource","hyphenationCallback","font","i","_extends","registerEmojiSource","url","format","registerHyphenationCallback","callback","getFont","isStandard","standard","includes","f","reset","keys","Object","key","clear","getRegisteredFonts","getEmojiSource","getHyphenationCallback","getRegisteredFontFamilies"],"mappings":"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"}