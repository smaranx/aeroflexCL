{"version":3,"file":"index.js","sources":["../src/font.js","../src/standard.js","../src/index.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-18-pdf/fontkit';\n\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isDataUrl = dataUrl => {\n  const header = dataUrl.split(',')[0];\n  const hasDataPrefix = header.substring(0, 5) === 'data:';\n  const hasBase64Prefix = header.split(';')[1] === 'base64';\n\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nconst resolveFontWeight = value => {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    const { postscriptName } = this.options;\n\n    if (isDataUrl(this.src)) {\n      this.data = fontkit.create(\n        Buffer.from(this.src.split(',')[1], 'base64'),\n        postscriptName,\n      );\n    } else if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data, postscriptName);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, postscriptName, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    const numericFontWeight = resolveFontWeight(fontWeight);\n\n    this.sources.push(\n      new FontSource(src, this.family, fontStyle, numericFontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources\n      .filter(s => s.fontWeight < fontWeight)\n      .sort(sortByFontWeight);\n    const gt = styleSources\n      .filter(s => s.fontWeight > fontWeight)\n      .sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${this.family}, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Courier-BoldOblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Helvetica-BoldOblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n  'Times-BoldItalic',\n];\n","import font from './font';\nimport standard from './standard';\n\nfunction FontStore() {\n  let fonts = {};\n\n  let emojiSource = null;\n\n  let hyphenationCallback = null;\n\n  this.register = data => {\n    const { family } = data;\n\n    if (!fonts[family]) {\n      fonts[family] = font.create(family);\n    }\n\n    // Bulk loading\n    if (data.fonts) {\n      for (let i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register({ family, ...data.fonts[i] });\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = ({ url, format = 'png' }) => {\n    emojiSource = { url, format };\n  };\n\n  this.registerHyphenationCallback = callback => {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\n        `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n      );\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = async descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return;\n\n    const f = this.getFont(descriptor);\n\n    // We cache the font to avoid fetching it many times\n    if (!f.data && !f.loading) {\n      await f.load();\n    }\n  };\n\n  this.reset = () => {\n    const keys = Object.keys(fonts);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = () => {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = () => fonts;\n\n  this.getEmojiSource = () => emojiSource;\n\n  this.getHyphenationCallback = () => hyphenationCallback;\n\n  this.getRegisteredFontFamilies = () => Object.keys(fonts);\n}\n\nexport default FontStore;\n"],"names":["FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","fetchFont","src","options","response","fetch","buffer","arrayBuffer","constructor","name","Buffer","from","isDataUrl","dataUrl","header","split","hasDataPrefix","substring","hasBase64Prefix","resolveFontWeight","value","sortByFontWeight","a","b","fontWeight","FontSource","fontFamily","fontStyle","data","loading","load","postscriptName","fontkit","create","isUrl","headers","body","method","Promise","resolve","reject","open","err","Font","family","sources","register","numericFontWeight","push","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","length","lt","sort","gt","Error","FontStore","fonts","emojiSource","hyphenationCallback","font","i","registerEmojiSource","url","format","registerHyphenationCallback","callback","getFont","isStandard","standard","includes","f","reset","keys","Object","key","clear","getRegisteredFonts","getEmojiSource","getHyphenationCallback","getRegisteredFontFamilies"],"mappings":";;;;;;;;;;;;;;AAAA;AAMA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,GADa;AAEnBC,EAAAA,QAAQ,EAAE,GAFS;AAGnBC,EAAAA,UAAU,EAAE,GAHO;AAInBC,EAAAA,UAAU,EAAE,GAJO;AAKnBC,EAAAA,KAAK,EAAE,GALY;AAMnBC,EAAAA,MAAM,EAAE,GANW;AAOnBC,EAAAA,MAAM,EAAE,GAPW;AAQnBC,EAAAA,QAAQ,EAAE,GARS;AASnBC,EAAAA,QAAQ,EAAE,GATS;AAUnBC,EAAAA,IAAI,EAAE,GAVa;AAWnBC,EAAAA,SAAS,EAAE,GAXQ;AAYnBC,EAAAA,SAAS,EAAE,GAZQ;AAanBC,EAAAA,KAAK,EAAE,GAbY;AAcnBC,EAAAA,KAAK,EAAE,GAAA;AAdY,CAArB,CAAA;;AAiBA,MAAMC,SAAS,GAAG,OAAOC,GAAP,EAAYC,OAAZ,KAAwB;EACxC,MAAMC,QAAQ,GAAG,MAAMC,yBAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B,CAAA;AAEA,EAAA,MAAMG,MAAM,GAAG,OAAOF,QAAQ,CAACE,MAAT,GAClBF,QAAQ,CAACE,MAAT,EADkB,GAElBF,QAAQ,CAACG,WAAT,EAFW,CAAf,CAAA;AAIA,EAAA,OAAOD,MAAM,CAACE,WAAP,CAAmBC,IAAnB,KAA4B,QAA5B,GAAuCH,MAAvC,GAAgDI,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAvD,CAAA;AACD,CARD,CAAA;;AAUA,MAAMM,SAAS,GAAGC,OAAO,IAAI;EAC3B,MAAMC,MAAM,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAmB,CAAA,CAAnB,CAAf,CAAA;EACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAA,KAA2B,OAAjD,CAAA;EACA,MAAMC,eAAe,GAAGJ,MAAM,CAACC,KAAP,CAAa,GAAb,CAAA,CAAkB,CAAlB,CAAA,KAAyB,QAAjD,CAAA;EAEA,OAAOC,aAAa,IAAIE,eAAxB,CAAA;AACD,CAND,CAAA;;AAQA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;EACjC,OAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BlC,YAAY,CAACkC,KAAD,CAAxC,GAAkDA,KAAzD,CAAA;AACD,CAFD,CAAA;;AAIA,MAAMC,gBAAgB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAApD,CAAA;;AAEA,MAAMC,UAAN,CAAiB;EACfjB,WAAW,CAACN,GAAD,EAAMwB,UAAN,EAAkBC,SAAlB,EAA6BH,UAA7B,EAAyCrB,OAAzC,EAAkD;IAC3D,IAAKD,CAAAA,GAAL,GAAWA,GAAX,CAAA;IACA,IAAKwB,CAAAA,UAAL,GAAkBA,UAAlB,CAAA;AACA,IAAA,IAAA,CAAKC,SAAL,GAAiBA,SAAS,IAAI,QAA9B,CAAA;AACA,IAAA,IAAA,CAAKH,UAAL,GAAkBA,UAAU,IAAI,GAAhC,CAAA;IAEA,IAAKI,CAAAA,IAAL,GAAY,IAAZ,CAAA;IACA,IAAKC,CAAAA,OAAL,GAAe,KAAf,CAAA;IACA,IAAK1B,CAAAA,OAAL,GAAeA,OAAf,CAAA;AACD,GAAA;;AAES,EAAA,MAAJ2B,IAAI,GAAG;IACX,IAAKD,CAAAA,OAAL,GAAe,IAAf,CAAA;IAEA,MAAM;AAAEE,MAAAA,cAAAA;AAAF,KAAA,GAAqB,KAAK5B,OAAhC,CAAA;;AAEA,IAAA,IAAIS,SAAS,CAAC,IAAKV,CAAAA,GAAN,CAAb,EAAyB;MACvB,IAAK0B,CAAAA,IAAL,GAAYI,2BAAO,CAACC,MAAR,CACVvB,MAAM,CAACC,IAAP,CAAY,IAAKT,CAAAA,GAAL,CAASa,KAAT,CAAe,GAAf,CAAA,CAAoB,CAApB,CAAZ,EAAoC,QAApC,CADU,EAEVgB,cAFU,CAAZ,CAAA;KADF,MAKO,IAAeG,yBAAK,CAAC,IAAA,CAAKhC,GAAN,CAApB,EAAgC;MACrC,MAAM;QAAEiC,OAAF;QAAWC,IAAX;AAAiBC,QAAAA,MAAM,GAAG,KAAA;AAA1B,OAAA,GAAoC,KAAKlC,OAA/C,CAAA;AACA,MAAA,MAAMyB,IAAI,GAAG,MAAM3B,SAAS,CAAC,IAAA,CAAKC,GAAN,EAAW;QAAEmC,MAAF;QAAUD,IAAV;AAAgBD,QAAAA,OAAAA;AAAhB,OAAX,CAA5B,CAAA;MACA,IAAKP,CAAAA,IAAL,GAAYI,2BAAO,CAACC,MAAR,CAAeL,IAAf,EAAqBG,cAArB,CAAZ,CAAA;AACD,KAJM,MAIA;AACL,MAAA,IAAA,CAAKH,IAAL,GAAY,MAAM,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAC5BR,2BAAO,CAACS,IAAR,CAAa,KAAKvC,GAAlB,EAAuB6B,cAAvB,EAAuC,CAACW,GAAD,EAAMd,IAAN,KACrCc,GAAG,GAAGF,MAAM,CAACE,GAAD,CAAT,GAAiBH,OAAO,CAACX,IAAD,CAD7B,CADgB,CAAlB,CAAA;AAKD,KAAA;;IAED,IAAKC,CAAAA,OAAL,GAAe,KAAf,CAAA;AACD,GAAA;;AAnCc,CAAA;;AAsCjB,MAAMc,IAAN,CAAW;EACI,OAANV,MAAM,CAACW,MAAD,EAAS;AACpB,IAAA,OAAO,IAAID,IAAJ,CAASC,MAAT,CAAP,CAAA;AACD,GAAA;;EAEDpC,WAAW,CAACoC,MAAD,EAAS;IAClB,IAAKA,CAAAA,MAAL,GAAcA,MAAd,CAAA;IACA,IAAKC,CAAAA,OAAL,GAAe,EAAf,CAAA;AACD,GAAA;;AAEDC,EAAAA,QAAQ,CAAC;IAAE5C,GAAF;IAAOsB,UAAP;IAAmBG,SAAnB;IAA8B,GAAGxB,OAAAA;AAAjC,GAAD,EAA6C;AACnD,IAAA,MAAM4C,iBAAiB,GAAG5B,iBAAiB,CAACK,UAAD,CAA3C,CAAA;AAEA,IAAA,IAAA,CAAKqB,OAAL,CAAaG,IAAb,CACE,IAAIvB,UAAJ,CAAevB,GAAf,EAAoB,IAAA,CAAK0C,MAAzB,EAAiCjB,SAAjC,EAA4CoB,iBAA5C,EAA+D5C,OAA/D,CADF,CAAA,CAAA;AAGD,GAAA;;EAEDoC,OAAO,CAACU,UAAD,EAAa;IAClB,MAAM;AAAEzB,MAAAA,UAAU,GAAG,GAAf;AAAoBG,MAAAA,SAAS,GAAG,QAAA;AAAhC,KAAA,GAA6CsB,UAAnD,CAAA;AACA,IAAA,MAAMC,YAAY,GAAG,IAAA,CAAKL,OAAL,CAAaM,MAAb,CAAoBC,CAAC,IAAIA,CAAC,CAACzB,SAAF,KAAgBA,SAAzC,CAArB,CAFkB;;AAKlB,IAAA,MAAM0B,QAAQ,GAAGH,YAAY,CAACI,IAAb,CAAkBF,CAAC,IAAIA,CAAC,CAAC5B,UAAF,KAAiBA,UAAxC,CAAjB,CAAA;IAEA,IAAI6B,QAAJ,EAAc,OAAOA,QAAP,CAAA;AAEd,IAAA,IAAIE,GAAJ,CAAA;;AAEA,IAAA,IAAI/B,UAAU,IAAI,GAAd,IAAqBA,UAAU,IAAI,GAAvC,EAA4C;AAC1C,MAAA,MAAMgC,UAAU,GAAGN,YAAY,CAACC,MAAb,CAAoBC,CAAC,IAAIA,CAAC,CAAC5B,UAAF,IAAgBA,UAAzC,CAAnB,CAAA;AACA,MAAA,MAAMiC,WAAW,GAAGP,YAAY,CAACC,MAAb,CAAoBC,CAAC,IAAIA,CAAC,CAAC5B,UAAF,GAAe,GAAxC,CAApB,CAAA;AACA,MAAA,MAAMkC,GAAG,GAAGR,YAAY,CAACC,MAAb,CACVC,CAAC,IAAIA,CAAC,CAAC5B,UAAF,IAAgBA,UAAhB,IAA8B4B,CAAC,CAAC5B,UAAF,GAAe,GADxC,CAAZ,CAAA;AAIA+B,MAAAA,GAAG,GAAGG,GAAG,CAAC,CAAD,CAAH,IAAUF,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAApB,IAA+CF,WAAW,CAAC,CAAD,CAAhE,CAAA;AACD,KAAA;;AAED,IAAA,MAAMG,EAAE,GAAGV,YAAY,CACpBC,MADQ,CACDC,CAAC,IAAIA,CAAC,CAAC5B,UAAF,GAAeA,UADnB,EAERqC,IAFQ,CAEHxC,gBAFG,CAAX,CAAA;AAGA,IAAA,MAAMyC,EAAE,GAAGZ,YAAY,CACpBC,MADQ,CACDC,CAAC,IAAIA,CAAC,CAAC5B,UAAF,GAAeA,UADnB,EAERqC,IAFQ,CAEHxC,gBAFG,CAAX,CAAA;;IAIA,IAAIG,UAAU,GAAG,GAAjB,EAAsB;AACpB+B,MAAAA,GAAG,GAAGK,EAAE,CAACA,EAAE,CAACD,MAAH,GAAY,CAAb,CAAF,IAAqBG,EAAE,CAAC,CAAD,CAA7B,CAAA;AACD,KAAA;;IAED,IAAItC,UAAU,GAAG,GAAjB,EAAsB;AACpB+B,MAAAA,GAAG,GAAGO,EAAE,CAAC,CAAD,CAAF,IAASF,EAAE,CAACA,EAAE,CAACD,MAAH,GAAY,CAAb,CAAjB,CAAA;AACD,KAAA;;IAED,IAAI,CAACJ,GAAL,EAAU;MACR,MAAM,IAAIQ,KAAJ,CACH,CAAA,2BAAA,EAA6B,KAAKnB,MAAO,CAAA,aAAA,EAAepB,UAAW,CAAA,CADhE,CAAN,CAAA;AAGD,KAAA;;AAED,IAAA,OAAO+B,GAAP,CAAA;AACD,GAAA;;AA7DQ;;ACrFX,eAAe,CACb,SADa,EAEb,cAFa,EAGb,iBAHa,EAIb,qBAJa,EAKb,WALa,EAMb,gBANa,EAOb,mBAPa,EAQb,uBARa,EASb,aATa,EAUb,YAVa,EAWb,cAXa,EAYb,kBAZa,CAAf;;ACGA,SAASS,SAAT,GAAqB;EACnB,IAAIC,KAAK,GAAG,EAAZ,CAAA;EAEA,IAAIC,WAAW,GAAG,IAAlB,CAAA;EAEA,IAAIC,mBAAmB,GAAG,IAA1B,CAAA;;EAEA,IAAKrB,CAAAA,QAAL,GAAgBlB,IAAI,IAAI;IACtB,MAAM;AAAEgB,MAAAA,MAAAA;AAAF,KAAA,GAAahB,IAAnB,CAAA;;AAEA,IAAA,IAAI,CAACqC,KAAK,CAACrB,MAAD,CAAV,EAAoB;MAClBqB,KAAK,CAACrB,MAAD,CAAL,GAAgBwB,IAAI,CAACnC,MAAL,CAAYW,MAAZ,CAAhB,CAAA;AACD,KALqB;;;IAQtB,IAAIhB,IAAI,CAACqC,KAAT,EAAgB;AACd,MAAA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzC,IAAI,CAACqC,KAAL,CAAWN,MAA/B,EAAuCU,CAAC,IAAI,CAA5C,EAA+C;AAC7CJ,QAAAA,KAAK,CAACrB,MAAD,CAAL,CAAcE,QAAd,CAAuB;UAAEF,MAAF;AAAU,UAAA,GAAGhB,IAAI,CAACqC,KAAL,CAAWI,CAAX,CAAA;SAApC,CAAA,CAAA;AACD,OAAA;AACF,KAJD,MAIO;AACLJ,MAAAA,KAAK,CAACrB,MAAD,CAAL,CAAcE,QAAd,CAAuBlB,IAAvB,CAAA,CAAA;AACD,KAAA;GAdH,CAAA;;EAiBA,IAAK0C,CAAAA,mBAAL,GAA2B,CAAC;IAAEC,GAAF;AAAOC,IAAAA,MAAM,GAAG,KAAA;AAAhB,GAAD,KAA6B;AACtDN,IAAAA,WAAW,GAAG;MAAEK,GAAF;AAAOC,MAAAA,MAAAA;KAArB,CAAA;GADF,CAAA;;EAIA,IAAKC,CAAAA,2BAAL,GAAmCC,QAAQ,IAAI;AAC7CP,IAAAA,mBAAmB,GAAGO,QAAtB,CAAA;GADF,CAAA;;EAIA,IAAKC,CAAAA,OAAL,GAAe1B,UAAU,IAAI;IAC3B,MAAM;AAAEvB,MAAAA,UAAAA;AAAF,KAAA,GAAiBuB,UAAvB,CAAA;AACA,IAAA,MAAM2B,UAAU,GAAGC,QAAQ,CAACC,QAAT,CAAkBpD,UAAlB,CAAnB,CAAA;IAEA,IAAIkD,UAAJ,EAAgB,OAAO,IAAP,CAAA;;AAEhB,IAAA,IAAI,CAACX,KAAK,CAACvC,UAAD,CAAV,EAAwB;AACtB,MAAA,MAAM,IAAIqC,KAAJ,CACH,CAA8BrC,4BAAAA,EAAAA,UAAW,sDADtC,CAAN,CAAA;AAGD,KAAA;;IAED,OAAOuC,KAAK,CAACvC,UAAD,CAAL,CAAkBa,OAAlB,CAA0BU,UAA1B,CAAP,CAAA;GAZF,CAAA;;AAeA,EAAA,IAAA,CAAKnB,IAAL,GAAY,MAAMmB,UAAN,IAAoB;IAC9B,MAAM;AAAEvB,MAAAA,UAAAA;AAAF,KAAA,GAAiBuB,UAAvB,CAAA;AACA,IAAA,MAAM2B,UAAU,GAAGC,QAAQ,CAACC,QAAT,CAAkBpD,UAAlB,CAAnB,CAAA;AAEA,IAAA,IAAIkD,UAAJ,EAAgB,OAAA;IAEhB,MAAMG,CAAC,GAAG,IAAKJ,CAAAA,OAAL,CAAa1B,UAAb,CAAV,CAN8B;;IAS9B,IAAI,CAAC8B,CAAC,CAACnD,IAAH,IAAW,CAACmD,CAAC,CAAClD,OAAlB,EAA2B;MACzB,MAAMkD,CAAC,CAACjD,IAAF,EAAN,CAAA;AACD,KAAA;GAXH,CAAA;;EAcA,IAAKkD,CAAAA,KAAL,GAAa,MAAM;AACjB,IAAA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYhB,KAAZ,CAAb,CAAA;;AAEA,IAAA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,IAAI,CAACtB,MAAzB,EAAiCU,CAAC,IAAI,CAAtC,EAAyC;AACvC,MAAA,MAAMc,GAAG,GAAGF,IAAI,CAACZ,CAAD,CAAhB,CAAA;AACAJ,MAAAA,KAAK,CAACkB,GAAD,CAAL,CAAWvD,IAAX,GAAkB,IAAlB,CAAA;AACD,KAAA;GANH,CAAA;;EASA,IAAKwD,CAAAA,KAAL,GAAa,MAAM;AACjBnB,IAAAA,KAAK,GAAG,EAAR,CAAA;GADF,CAAA;;EAIA,IAAKoB,CAAAA,kBAAL,GAA0B,MAAMpB,KAAhC,CAAA;;EAEA,IAAKqB,CAAAA,cAAL,GAAsB,MAAMpB,WAA5B,CAAA;;EAEA,IAAKqB,CAAAA,sBAAL,GAA8B,MAAMpB,mBAApC,CAAA;;EAEA,IAAKqB,CAAAA,yBAAL,GAAiC,MAAMN,MAAM,CAACD,IAAP,CAAYhB,KAAZ,CAAvC,CAAA;AACD;;;;"}